---
- name: Ensure group "grafana" exists
  ansible.builtin.group:
    name: grafana
    state: present

- name: Add the user 'grafana'
  ansible.builtin.user:
    name: grafana
    group: grafana

- name: Get grafana user info
  ansible.builtin.getent:
    database: passwd
    key: grafana

- name: Create directories for monitoring
  file:
    path: "{{ item }}"
    state: directory
    owner: grafana
    group: grafana
    mode: 0755
  loop:
    - /usr/local/share/dodasts/monitoring
    - /usr/local/share/dodasts/monitoring/grafana
    - /usr/local/share/dodasts/monitoring/grafana/data

- name: Create grafana configs
  copy:
    src: "{{ role_path }}/files/grafana"
    dest: /usr/local/share/dodasts/monitoring
    directory_mode: 0755

# ---------- IAM Client retrieving, updating and local saving ----------
- name: Check vars before interacting with the IAM issuer
  ansible.builtin.assert:
    that:
      - monitoring_iam_url        | length > 0
      - monitoring_iam_client_id  | length > 0
      - monitoring_iam_token      | length > 0
      - monitoring_dns_name       | length > 0
      - service_grafana_port      is defined
    fail_msg: Not defined variable among monitoring_iam_url, monitoring_iam_client_id, monitoring_iam_token, monitoring_dns_name and service_grafana_port.

- name: Collect, Update and store locally the IAM Client info
  ansible.builtin.include_tasks: iam-client.yml
# ----------------------------------------------------------------------

- name: Retrieve client info
  set_fact:
    iam_response: "{{ lookup('file', '/usr/local/share/dodasts/monitoring/.client-iam.json') }}"

- name: Create grafana config
  template:
    src: grafana.ini.j2
    dest: /usr/local/share/dodasts/monitoring/grafana/config/custom.ini
  vars:
    client_id: "{{ iam_response.client_id }}"
    client_secret: "{{ iam_response.client_secret }}"

- name: let grafana to create admin
  set_fact:
    key_values: "yes"
    service_grafana_disable_admin_creation: false
  when: (service_grafana_admin_user|length > 0) and (service_grafana_admin_password|length > 0)

- name: prepare variables for monitoring
  set_fact:
    key_value: "yes"
    grafana_service: |
      grafana:
          image: {{ service_grafana_image }}
          container_name: grafana
          user: "{{ getent_passwd['grafana'][1] }}:{{ getent_passwd['grafana'][2] }}"
          depends_on:
            - prometheus
          restart: unless-stopped
          command:
            - "-config"
            - "/opt/grafana/custom.ini"
          ports:
            - {{ service_grafana_port }}:{{ service_grafana_port }}
          volumes:
            - /usr/local/share/dodasts/certs/grafana:/usr/local/share/dodasts/certs/grafana
            - /usr/local/share/dodasts/monitoring/grafana/data:/var/lib/grafana
            - /usr/local/share/dodasts/monitoring/grafana/config:/opt/grafana/
            - /usr/local/share/dodasts/monitoring/grafana/config/provisioning:/etc/grafana/provisioning
            - /usr/local/share/dodasts/monitoring/grafana/dash_models:/opt/dash_models
          environment:
            - GF_SECURITY_ADMIN_USER={{ service_grafana_admin_user }}
            - GF_SECURITY_ADMIN_PASSWORD={{ service_grafana_admin_password }}
            - GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION={{ service_grafana_disable_admin_creation }}
            - GF_USERS_ALLOW_SIGN_UP=false
            - GF_UNIFIED_ALERTING_ENABLED=true
